set(CMAKE_POSITION_INDEPENDENT_CODE 1)

include_directories(${CMAKE_CURRENT_SOURCE_DIR})
include_directories("${CMAKE_SOURCE_DIR}/include")

find_package(GTK2 REQUIRED)
include_directories(${GTK2_INCLUDE_DIRS} ${GTK2_GDK_INCLUDE_DIR} ${GTK2_GLIB_INCLUDE_DIR})
find_package(GtkGLExt REQUIRED)
include_directories(${GTKGL_INCLUDE_DIRS})

add_subdirectory(cmdlib)
add_subdirectory(container)
add_subdirectory(ddslib)
add_subdirectory(debugging)
add_subdirectory(generic)
add_subdirectory(gtkutil)
add_subdirectory(l_net)
#add_subdirectory(math)
add_subdirectory(mathlib)
add_subdirectory(memory)
add_subdirectory(modulesystem)
add_subdirectory(os)
add_subdirectory(picomodel)
add_subdirectory(profile)
add_subdirectory(script)
add_subdirectory(signal)
add_subdirectory(stream)
add_subdirectory(string)
add_subdirectory(xml)

add_library(libs
    archivelib.cpp
    archivelib.h
    bytebool.cpp
    bytebool.h
    bytestreamutils.cpp
    bytestreamutils.h
    character.cpp
    character.h
    cmdlib.h
    convert.cpp
    convert.h
    ddslib.h
    dragplanes.cpp
    dragplanes.h
    eclasslib.cpp
    eclasslib.h
    entitylib.cpp
    entitylib.h
    entityxml.cpp
    entityxml.h
    fs_filesystem.cpp
    fs_filesystem.h
    fs_path.cpp
    fs_path.h
    imagelib.cpp
    imagelib.h
    instancelib.cpp
    instancelib.h
    maplib.cpp
    maplib.h
    mathlib.h
    moduleobservers.cpp
    moduleobservers.h
    picomodel.h
    pivot.cpp
    pivot.h
    render.cpp
    render.h
    scenelib.cpp
    scenelib.h
    selectionlib.cpp
    selectionlib.h
    shaderlib.cpp
    shaderlib.h
    stringio.cpp
    stringio.h
    texturelib.cpp
    texturelib.h
    transformlib.cpp
    transformlib.h
    traverselib.cpp
    traverselib.h
    typesystem.cpp
    typesystem.h
    undolib.cpp
    undolib.h
    uniquenames.cpp
    uniquenames.h
    versionlib.cpp
    versionlib.h
)